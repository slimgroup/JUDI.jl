name: CI-operators

on: push
  # Trigger the workflow on push to master or pull request
  # to be merged in master
  # push:
  #   branches:
  #     - master
  # pull_request:
  #   branches:
  #     - master

jobs:
  test:
    name: ${{ matrix.op }} on Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      DEVITO_ARCH: gcc-9
      DEVITO_LANGUAGE: "openmp"
      DEVITO_BACKEND: "core"
      DEVITO_LOGGING: "ERROR"
      OMP_NUM_THREADS: ${{ matrix.omp }}
      GROUP: ${{ matrix.op }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        op: ["ISO_OP", "ISO_OP_FS", "TTI_OP", "TTI_OP_FS"]
        version: ['1.3', '1.4', '1.5']
        omp: [2]
  
        include:
          - os: macos-latest
            version: '1.4'
            op: "ISO_OP"
            omp: 1

          - os: ubuntu-latest
            version: '1.1'
            op: "ISO_OP_FS"
            omp: 2


    steps:
      - name: Checkout JUDI
        uses: actions/checkout@v2

      - name: Install GCC 9
        if : runner.os == 'macOS'
        run : |
          brew install gcc@9
          gcc --version

      - name: Setup julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: x64

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Add SLIM registery
        run: |
           julia --color=yes --check-bounds=yes -e 'using Pkg;Pkg.update();Pkg.Registry.add(RegistrySpec(url="https://github.com/slimgroup/SLIMregistryJL.git"))'

      - name: Install devito
        run: |
          python -m pip install --upgrade pip
          pip install devito
          pip install matplotlib

      - name: Build JUDI
        uses: julia-actions/julia-buildpkg@latest

      - name: Rebuild PyCall with system python
        run: |
          export PYTHON=$(which python)
          julia --color=yes --check-bounds=yes --project -e 'using Pkg; Pkg.build("PyCall")'
          julia --color=yes --check-bounds=yes --project -e 'using Pkg; Pkg.build("PyPlot")'

      - name: Run tests
        uses: julia-actions/julia-runtest@latest

      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
