name: CI-operators

on:
  # Trigger the workflow on push to master or pull request
  # to be merged in master
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      DEVITO_ARCH: gcc-7
      DEVITO_LANGUAGE: "openmp"
      DEVITO_BACKEND: "core"
      DEVITO_LOGGING: "ERROR"
      OMP_NUM_THREADS: 4
      GROUP: "OP"

    strategy:
      fail-fast: false

      matrix:
        version:
          - '1.1'
          - '1.2'
          - '1.3'
          - '1.4'
          - 'nightly'
        os:
          - ubuntu-latest
          - macos-latest
        arch:
          - x64

    steps:
      - name: Checkout JUDI
        uses: actions/checkout@v2

      - name: Setup julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Add SLIM registery
        run: |
           julia --color=yes --check-bounds=yes -e 'using Pkg;Pkg.update();Pkg.Registry.add(RegistrySpec(url="https://github.com/slimgroup/SLIMregistryJL.git"))'

      - name: Instal gcc
        if: runner.os == 'macOS'
        run: brew install gcc@7

      - name: Install devito
        run: |
          python -m pip install --upgrade pip
          pip install devito
          pip install matplotlib

      - name: Build JUDI
        uses: julia-actions/julia-buildpkg@latest

      - name: Install extras julia packages
        run: |
          julia --color=yes --check-bounds=yes --project -e 'using Pkg;Pkg.add("Images")'
          julia --color=yes --check-bounds=yes --project -e 'using Pkg;Pkg.add("ArgParse")'
          julia --color=yes --check-bounds=yes --project -e 'using Pkg;Pkg.add("Printf")'
          julia --color=yes --check-bounds=yes --project -e 'using Pkg;Pkg.add("PyPlot")'

      - name: Rebuild PyCall with system python
        run: |
          export PYTHON=$(which python)
          julia --color=yes --check-bounds=yes --project -e 'using Pkg; Pkg.build("PyCall")'
          julia --color=yes --check-bounds=yes --project -e 'using Pkg; Pkg.build("PyPlot")'

      - name: Run tests
        uses: julia-actions/julia-runtest@latest

      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
